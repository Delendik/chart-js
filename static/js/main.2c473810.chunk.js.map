{"version":3,"sources":["data/data.js","App.js","index.js"],"names":["dataSet","App","Date","prototype","getWeek","onejan","this","getFullYear","Math","ceil","getDay","dataForCharts","map","item","data","name","metric_name","dateWeek","dates_array","values","values_array","resultSum","reduce","acc","current","index","resultQty","result","property","property2","toFixed","takeData","labels","Object","keys","datasets","label","backgroundColor","borderColor","pointBorderColor","pointBackgroundColor","className","options","scales","xAxes","ticks","fontColor","yAxes","min","max","stepSize","title","display","text","tooltips","enable","titleAlign","position","titleFontStyle","bodyAlign","cornerRadius","yPadding","callbacks","labelTextColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c473810.chunk.js","sourcesContent":["const dataSet = [\r\n  {\r\n    \"dates_array\": [\r\n      \"Tue, 05 Jan 2021 00:00:00 GMT\",\r\n      \"Thu, 07 Jan 2021 00:00:00 GMT\",\r\n      \"Mon, 18 Jan 2021 00:00:00 GMT\",\r\n      \"Fri, 22 Jan 2021 00:00:00 GMT\",\r\n      \"Sat, 23 Jan 2021 00:00:00 GMT\",\r\n      \"Mon, 25 Jan 2021 00:00:00 GMT\",\r\n      \"Mon, 01 Feb 2021 00:00:00 GMT\",\r\n      \"Sat, 13 Feb 2021 00:00:00 GMT\",\r\n      \"Mon, 15 Feb 2021 00:00:00 GMT\",\r\n      \"Tue, 16 Feb 2021 00:00:00 GMT\",\r\n      \"Wed, 17 Feb 2021 00:00:00 GMT\",\r\n      \"Thu, 18 Feb 2021 00:00:00 GMT\",\r\n      \"Wed, 24 Feb 2021 00:00:00 GMT\",\r\n      \"Mon, 01 Mar 2021 00:00:00 GMT\",\r\n      \"Wed, 03 Mar 2021 00:00:00 GMT\",\r\n      \"Sat, 06 Mar 2021 00:00:00 GMT\",\r\n  ],\r\n  \"metric_id\": 11,\r\n  \"metric_name\": \"\\u0421\\u043b\\u043e\\u0436\\u043d\\u043e\\u0441\\u0442\\u044c \\u0440\\u0430\\u0431\\u043e\\u0442\\u044b\",\r\n  \"values_array\": [\r\n    2.71, 2.71, \r\n    2.49, 1.79, \r\n    1.27, 2.26, \r\n    2.93, \r\n    2.07, 2.18, 1.75, 1.17, 1.23, \r\n    1.11, \r\n    2.3, 2.12, \r\n    1.85]\r\n  },\r\n  {\r\n    \"dates_array\": [\"Wed, 06 Jan 2021 00:00:00 GMT\", \"Mon, 11 Jan 2021 00:00:00 GMT\", \"Tue, 12 Jan 2021 00:00:00 GMT\", \"Thu, 14 Jan 2021 00:00:00 GMT\", \"Sat, 16 Jan 2021 00:00:00 GMT\", \"Sun, 31 Jan 2021 00:00:00 GMT\", \"Wed, 03 Feb 2021 00:00:00 GMT\", \"Fri, 05 Feb 2021 00:00:00 GMT\", \"Tue, 09 Feb 2021 00:00:00 GMT\", \"Fri, 12 Feb 2021 00:00:00 GMT\", \"Fri, 19 Feb 2021 00:00:00 GMT\", \"Sat, 20 Feb 2021 00:00:00 GMT\", \"Sun, 21 Feb 2021 00:00:00 GMT\", \"Thu, 25 Feb 2021 00:00:00 GMT\", \"Fri, 26 Feb 2021 00:00:00 GMT\", \"Sat, 27 Feb 2021 00:00:00 GMT\", \"Sun, 28 Feb 2021 00:00:00 GMT\", \"Thu, 04 Mar 2021 00:00:00 GMT\", \"Fri, 05 Mar 2021 00:00:00 GMT\", \"Sun, 07 Mar 2021 00:00:00 GMT\", \"Mon, 08 Mar 2021 00:00:00 GMT\"],\r\n    \"metric_id\": 12,\r\n    \"metric_name\": \"Work-life \\u0431\\u0430\\u043b\\u0430\\u043d\\u0441\",\r\n    \"values_array\": [1.24, 2.97, 1.25, 2.99, 1.61, 2.31, 1.71, 2.19, 1.08, 2.89, 2.42, 2.23, 2.01, 2.31, 2.24, 2.47, 2.32, 2.43, 2.91, 1.83, 2.46]\r\n  },\r\n  {\r\n    \"dates_array\": [\"Fri, 01 Jan 2021 00:00:00 GMT\", \"Sat, 02 Jan 2021 00:00:00 GMT\", \"Sun, 03 Jan 2021 00:00:00 GMT\", \"Fri, 08 Jan 2021 00:00:00 GMT\", \"Sat, 09 Jan 2021 00:00:00 GMT\", \"Sun, 10 Jan 2021 00:00:00 GMT\", \"Fri, 15 Jan 2021 00:00:00 GMT\", \"Sun, 17 Jan 2021 00:00:00 GMT\", \"Thu, 21 Jan 2021 00:00:00 GMT\", \"Wed, 27 Jan 2021 00:00:00 GMT\", \"Sat, 30 Jan 2021 00:00:00 GMT\", \"Tue, 02 Feb 2021 00:00:00 GMT\", \"Thu, 04 Feb 2021 00:00:00 GMT\", \"Mon, 08 Feb 2021 00:00:00 GMT\", \"Wed, 10 Feb 2021 00:00:00 GMT\", \"Thu, 11 Feb 2021 00:00:00 GMT\", \"Mon, 22 Feb 2021 00:00:00 GMT\", \"Tue, 23 Feb 2021 00:00:00 GMT\", \"Tue, 09 Mar 2021 00:00:00 GMT\"],\r\n    \"metric_id\": 13,\r\n    \"metric_name\": \"\\u0416\\u0438\\u0437\\u043d\\u044c \\u0432\\u043d\\u0435 \\u0440\\u0430\\u0431\\u043e\\u0442\\u044b\",\r\n    \"values_array\": [1.72, 2.35, 2.34, 2.05, 1.1, 1.53, 2.85, 2.1, 1.39, 1.83, 1.35, 1.05, 1.8, 1.14, 3.0, 2.67, 1.88, 2.26, 1.81]\r\n  },\r\n  {\r\n    \"dates_array\": [\"Mon, 04 Jan 2021 00:00:00 GMT\", \"Wed, 13 Jan 2021 00:00:00 GMT\", \"Tue, 19 Jan 2021 00:00:00 GMT\", \"Wed, 20 Jan 2021 00:00:00 GMT\", \"Sun, 24 Jan 2021 00:00:00 GMT\", \"Tue, 26 Jan 2021 00:00:00 GMT\", \"Thu, 28 Jan 2021 00:00:00 GMT\", \"Fri, 29 Jan 2021 00:00:00 GMT\", \"Sat, 06 Feb 2021 00:00:00 GMT\", \"Sun, 07 Feb 2021 00:00:00 GMT\", \"Sun, 14 Feb 2021 00:00:00 GMT\", \"Tue, 02 Mar 2021 00:00:00 GMT\", \"Wed, 10 Mar 2021 00:00:00 GMT\"],\r\n    \"metric_id\": 14,\r\n    \"metric_name\": \"\\u0421\\u0442\\u0435\\u043f\\u0435\\u043d\\u044c \\u0438\\u043d\\u0442\\u0435\\u0440\\u0435\\u0441\\u043d\\u043e\\u0441\\u0442\\u0438 \\u0437\\u0430\\u0434\\u0430\\u0447\",\r\n    \"values_array\": [2.86, 2.48, 2.39, 2.71, 2.85, 1.2, 2.66, 2.62, 1.43, 1.06, 1.57, 1.46, 2.8]\r\n  },\r\n]\r\n\r\nexport default dataSet;","import React from \"react\";\nimport './App.css';\nimport { Line } from \"react-chartjs-2\";\nimport dataSet from \"./data/data\";\n\n\nfunction App() {\n  Date.prototype.getWeek = function() {\n    var onejan = new Date(this.getFullYear(), 0, 1);\n    return Math.ceil((((this - onejan) / 86400000) + onejan.getDay() + 1) / 7);\n  };\n\n  const takeData = (data) => {\n    // достаём название метрики\n    const name = data.metric_name;\n    // вычисляем номер недели для данного числа\n    const dateWeek = data.dates_array.map(item=>(new Date(item).getWeek()));\n    // достаём значения для каждой даты\n    const values = data.values_array;\n    // Вычисляем суммарное значение для каждой недели\n    var resultSum = dateWeek.reduce(function(acc, current, index) {\n      acc[current] = (acc[current] || 0) + values[index];\n      return (acc);\n    }, {});\n    // Вычисляем количество значений для каждой недели\n    var resultQty = dateWeek.reduce(function(acc, current) {\n      acc[current] = (acc[current] || 0) + 1;\n      return (acc);\n    }, {});\n\n    // console.log(Object.values(resultQty))\n    // console.log(object1.hasOwnProperty('property1'));\n\n    let result = {};\n    // Вычисляем среднее значение для каждой недели\n    for (const property in resultSum) {\n      for (const property2 in resultQty) {\n        if(property===property2){\n          result[property] = (resultSum[property]/resultQty[property2]).toFixed (2);\n        };\n      };\n    };\n\n    return [name, result]\n  };\n\n  const dataForCharts = dataSet.map((item) => takeData(item));\n\n  const data = {\n    labels: Object.keys(dataForCharts[0][1]),\n    datasets: [\n      {\n        label: dataForCharts[0][0],\n        data: Object.values(dataForCharts[0][1]),\n        backgroundColor: [\"transparent\"],\n        borderColor: [\"#5C39DB\"],\n        pointBorderColor: \"#E786D7\",\n        pointBackgroundColor: \"#E786D7\",\n      },\n      {\n        label: dataForCharts[1][0],\n        data: Object.values(dataForCharts[1][1]),\n        backgroundColor: [\"transparent\"],\n        borderColor: [\"#1cdb3c\"],\n        pointBorderColor: \"#addbb5\",\n        pointBackgroundColor: \"#addbb5\",\n      },\n      {\n        label: dataForCharts[2][0],\n        data: Object.values(dataForCharts[2][1]),\n        backgroundColor: [\"transparent\"],\n        borderColor: [\"#dfd10c\"],\n        pointBorderColor: \"#df9c0c\",\n        pointBackgroundColor: \"#df9c0c\",\n      },\n      {\n        label: dataForCharts[3][0],\n        data: Object.values(dataForCharts[3][1]),\n        backgroundColor: [\"transparent\"],\n        borderColor: [\"#dd2a2a\"],\n        pointBorderColor: \"#cf8e8e\",\n        pointBackgroundColor: \"#cf8e8e\",\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      xAxes: [\n        {\n          ticks: {\n            fontColor: \"#24252E\",\n          },\n        },\n      ],\n      yAxes: [\n        {\n          ticks: {\n            min: 1,\n            max: 3,\n            stepSize: 0.1,\n            fontColor: \"#24252E\",\n          },\n        },\n\n      ],\n    },\n    title: {\n      display: true,\n      text: \"FeeLBack\",\n    },\n    tooltips: {\n      enable: true,\n      backgroundColor: \"#5C39DB\",\n      titleAlign: \"left\",\n      position: \"nearest\",\n      titleFontStyle: \"normal\",\n      bodyAlign: \"center\",\n      cornerRadius: 8,\n      yPadding: 8,\n      callbacks: {\n        title: function (data) {\n          return \"Неделя:\"+data[0].label;\n        },\n        labelTextColor: function () {\n          return \"#FFFFFF\";\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"App\">\n      <Line data={data} options={options}></Line>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}